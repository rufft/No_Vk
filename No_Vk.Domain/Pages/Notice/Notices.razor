@page "/notice"

@using No_Vk.Domain.Services

@inject UserDbContext _dbContext
@inject IUserDataService _userData
@inject INoticeHandlerService _noticeHandler

<div class="notices-container">
@foreach (var notice in _myNotices)
{
    <div class="notice">
        <div class="notice-info">
            <div class="notice-name">@notice.Name</div>
            <div class="notice-description">@notice.Description</div>
        </div>
        @if (notice.Type == NoticeType.FriendInvite)
        {
            <div class="notices-button">
                <button class="button" @onclick="() => AcceptFriendInvite(notice)">Accept</button>
                <button class="button" @onclick="() => DeclineFriendInvite(notice)">Decline</button>
            </div>
        }
    </div>

}
</div>


@code {
    private IQueryable<Notice> _myNotices;

    private User _me;
    
    private IQueryable<Notice> GetList() => _dbContext
        .Notices
        .Where(n => n.Addressee.Id == _me.Id);

    protected override void OnInitialized()
    {
        _me = _userData.GetMe();
        _myNotices = GetList();
    }

    private void AcceptFriendInvite(Notice notice)
    {
        _noticeHandler.FriendInviteInvokeAsync(notice, true);
        OnInitialized();
    }
    private void DeclineFriendInvite(Notice notice)
    {
        _noticeHandler.FriendInviteInvokeAsync(notice, false);
        OnInitialized();
    }
}
